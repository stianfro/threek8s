name: Build Docker Images

on:
  push:
    branches:
      - main
      - develop
      - 'feature/**'
  pull_request:
    branches:
      - main
      - develop
  workflow_dispatch:
  workflow_call:
    outputs:
      backend-tag:
        description: 'Backend image tag'
        value: ${{ jobs.build.outputs.backend-tag }}
      frontend-tag:
        description: 'Frontend image tag'
        value: ${{ jobs.build.outputs.frontend-tag }}

env:
  REGISTRY: ghcr.io
  IMAGE_NAME_BACKEND: ${{ github.repository }}/backend
  IMAGE_NAME_FRONTEND: ${{ github.repository }}/frontend

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      backend-tag: ${{ steps.meta-backend.outputs.tags }}
      frontend-tag: ${{ steps.meta-frontend.outputs.tags }}
    permissions:
      contents: read
      packages: write
    strategy:
      matrix:
        service: [backend, frontend]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          platforms: linux/amd64,linux/arm64

      - name: Log in to Container Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata for ${{ matrix.service }}
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ github.repository }}/${{ matrix.service }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=sha,prefix={{branch}}-
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build ${{ matrix.service }} Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./${{ matrix.service }}
          platforms: linux/amd64,linux/arm64
          push: false
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha,scope=${{ matrix.service }}
          cache-to: type=gha,mode=max,scope=${{ matrix.service }}
          build-args: |
            BUILDKIT_INLINE_CACHE=1

      - name: Save metadata outputs for ${{ matrix.service }}
        if: matrix.service == 'backend'
        id: meta-backend
        run: echo "tags=${{ steps.meta.outputs.tags }}" >> $GITHUB_OUTPUT

      - name: Save metadata outputs for ${{ matrix.service }}
        if: matrix.service == 'frontend'
        id: meta-frontend
        run: echo "tags=${{ steps.meta.outputs.tags }}" >> $GITHUB_OUTPUT

  test:
    needs: build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [backend, frontend]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Test ${{ matrix.service }} build
        run: |
          docker build -t test-${{ matrix.service }} ./${{ matrix.service }}
          docker run --rm test-${{ matrix.service }} echo "Build test successful"